=begin
#Up API

#The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TransactionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TransactionsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TransactionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TransactionsApi' do
    it 'should create an instance of TransactionsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TransactionsApi)
    end
  end

  # unit tests for accounts_account_id_transactions_get
  # List transactions by account
  # Retrieve a list of all transactions for a specific account. The returned list is [paginated](#pagination) and can be scrolled by following the &#x60;next&#x60; and &#x60;prev&#x60; links where present. To narrow the results to a specific date range pass one or both of &#x60;filter[since]&#x60; and &#x60;filter[until]&#x60; in the query string. These filter parameters **should not** be used for pagination. Results are ordered newest first to oldest last. 
  # @param account_id The unique identifier for the account. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of records to return in each page. 
  # @option opts [TransactionStatusEnum] :filter_status The transaction status for which to return records. This can be used to filter &#x60;HELD&#x60; transactions from those that are &#x60;SETTLED&#x60;. 
  # @option opts [Time] :filter_since The start date-time from which to return records, formatted according to rfc-3339. Not to be used for pagination purposes. 
  # @option opts [Time] :filter_until The end date-time up to which to return records, formatted according to rfc-3339. Not to be used for pagination purposes. 
  # @option opts [String] :filter_category The category identifier for which to filter transactions. Both parent and child categories can be filtered through this parameter. Providing an invalid category identifier results in a &#x60;404&#x60; response. 
  # @option opts [String] :filter_tag A transaction tag to filter for which to return records. If the tag does not exist, zero records are returned and a success response is given. 
  # @return [ListTransactionsResponse]
  describe 'accounts_account_id_transactions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transactions_get
  # List transactions
  # Retrieve a list of all transactions across all accounts for the currently authenticated user. The returned list is [paginated](#pagination) and can be scrolled by following the &#x60;next&#x60; and &#x60;prev&#x60; links where present. To narrow the results to a specific date range pass one or both of &#x60;filter[since]&#x60; and &#x60;filter[until]&#x60; in the query string. These filter parameters **should not** be used for pagination. Results are ordered newest first to oldest last. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of records to return in each page. 
  # @option opts [TransactionStatusEnum] :filter_status The transaction status for which to return records. This can be used to filter &#x60;HELD&#x60; transactions from those that are &#x60;SETTLED&#x60;. 
  # @option opts [Time] :filter_since The start date-time from which to return records, formatted according to rfc-3339. Not to be used for pagination purposes. 
  # @option opts [Time] :filter_until The end date-time up to which to return records, formatted according to rfc-3339. Not to be used for pagination purposes. 
  # @option opts [String] :filter_category The category identifier for which to filter transactions. Both parent and child categories can be filtered through this parameter. Providing an invalid category identifier results in a &#x60;404&#x60; response. 
  # @option opts [String] :filter_tag A transaction tag to filter for which to return records. If the tag does not exist, zero records are returned and a success response is given. 
  # @return [ListTransactionsResponse]
  describe 'transactions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transactions_id_get
  # Retrieve transaction
  # Retrieve a specific transaction by providing its unique identifier. 
  # @param id The unique identifier for the transaction. 
  # @param [Hash] opts the optional parameters
  # @return [GetTransactionResponse]
  describe 'transactions_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
